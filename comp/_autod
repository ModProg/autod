#compdef autod

autoload -U is-at-least

_autod() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-p[]' \
'--print[]' \
'-o[]' \
'--overwrite[]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':command:' \
":: :_autod_commands" \
"*::: :->autod" \
&& ret=0
    case $state in
    (autod)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:autod-command-$line[2]:"
        case $line[2] in
            (when)
_arguments "${_arguments_options[@]}" \
'-p[]' \
'--print[]' \
'-o[]' \
'--overwrite[]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':time:' \
&& ret=0
;;
(on)
_arguments "${_arguments_options[@]}" \
'-p[]' \
'--print[]' \
'-o[]' \
'--overwrite[]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
':event:' \
&& ret=0
;;
(no)
_arguments "${_arguments_options[@]}" \
'-p[]' \
'--print[]' \
'-o[]' \
'--overwrite[]' \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'-h[Prints help information]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_autod_commands] )) ||
_autod_commands() {
    local commands; commands=(
        "when:" \
"on:" \
"no:" \
"help:Prints this message or the help of the given subcommand(s)" \
    )
    _describe -t commands 'autod commands' commands "$@"
}
(( $+functions[_autod__help_commands] )) ||
_autod__help_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'autod help commands' commands "$@"
}
(( $+functions[_autod__no_commands] )) ||
_autod__no_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'autod no commands' commands "$@"
}
(( $+functions[_autod__on_commands] )) ||
_autod__on_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'autod on commands' commands "$@"
}
(( $+functions[_autod__when_commands] )) ||
_autod__when_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'autod when commands' commands "$@"
}

_autod "$@"